# coding: utf-8

"""
    vault/kernel/core_api/proto/v1/accounts/core_api_account_schedule_tags.proto

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: version not set
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ContractsSimulateContractsInstruction(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'timestamp': 'datetime',
        'create_account': 'AccountsAccount',
        'create_posting_instruction_batch': 'V1PostingInstructionBatch',
        'create_global_parameter': 'ContractsCreateGlobalParameterInstruction',
        'create_global_parameter_value': 'GlobalParametersGlobalParameterValue',
        'create_flag_definition': 'FlagsFlagDefinition',
        'create_flag': 'FlagsFlag',
        'create_plan': 'PlansPlan',
        'create_account_plan_assoc': 'PlansAccountPlanAssoc',
        'create_account_update': 'AccountsAccountUpdate',
        'update_account': 'AccountsAccount',
        'create_calendar': 'CalendarCalendar',
        'create_calendar_event': 'CalendarCalendarEvent',
        'create_smart_contract_module_versions_link': 'ContractModulesSmartContractModuleVersionsLink'
    }

    attribute_map = {
        'timestamp': 'timestamp',
        'create_account': 'create_account',
        'create_posting_instruction_batch': 'create_posting_instruction_batch',
        'create_global_parameter': 'create_global_parameter',
        'create_global_parameter_value': 'create_global_parameter_value',
        'create_flag_definition': 'create_flag_definition',
        'create_flag': 'create_flag',
        'create_plan': 'create_plan',
        'create_account_plan_assoc': 'create_account_plan_assoc',
        'create_account_update': 'create_account_update',
        'update_account': 'update_account',
        'create_calendar': 'create_calendar',
        'create_calendar_event': 'create_calendar_event',
        'create_smart_contract_module_versions_link': 'create_smart_contract_module_versions_link'
    }

    def __init__(self, timestamp=None, create_account=None, create_posting_instruction_batch=None, create_global_parameter=None, create_global_parameter_value=None, create_flag_definition=None, create_flag=None, create_plan=None, create_account_plan_assoc=None, create_account_update=None, update_account=None, create_calendar=None, create_calendar_event=None, create_smart_contract_module_versions_link=None):  # noqa: E501
        """ContractsSimulateContractsInstruction - a model defined in Swagger"""  # noqa: E501
        self._timestamp = None
        self._create_account = None
        self._create_posting_instruction_batch = None
        self._create_global_parameter = None
        self._create_global_parameter_value = None
        self._create_flag_definition = None
        self._create_flag = None
        self._create_plan = None
        self._create_account_plan_assoc = None
        self._create_account_update = None
        self._update_account = None
        self._create_calendar = None
        self._create_calendar_event = None
        self._create_smart_contract_module_versions_link = None
        self.discriminator = None
        if timestamp is not None:
            self.timestamp = timestamp
        if create_account is not None:
            self.create_account = create_account
        if create_posting_instruction_batch is not None:
            self.create_posting_instruction_batch = create_posting_instruction_batch
        if create_global_parameter is not None:
            self.create_global_parameter = create_global_parameter
        if create_global_parameter_value is not None:
            self.create_global_parameter_value = create_global_parameter_value
        if create_flag_definition is not None:
            self.create_flag_definition = create_flag_definition
        if create_flag is not None:
            self.create_flag = create_flag
        if create_plan is not None:
            self.create_plan = create_plan
        if create_account_plan_assoc is not None:
            self.create_account_plan_assoc = create_account_plan_assoc
        if create_account_update is not None:
            self.create_account_update = create_account_update
        if update_account is not None:
            self.update_account = update_account
        if create_calendar is not None:
            self.create_calendar = create_calendar
        if create_calendar_event is not None:
            self.create_calendar_event = create_calendar_event
        if create_smart_contract_module_versions_link is not None:
            self.create_smart_contract_module_versions_link = create_smart_contract_module_versions_link

    @property
    def timestamp(self):
        """Gets the timestamp of this ContractsSimulateContractsInstruction.  # noqa: E501

        Time of the instruction. Its exact meaning depends on the type of instruction.  # noqa: E501

        :return: The timestamp of this ContractsSimulateContractsInstruction.  # noqa: E501
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this ContractsSimulateContractsInstruction.

        Time of the instruction. Its exact meaning depends on the type of instruction.  # noqa: E501

        :param timestamp: The timestamp of this ContractsSimulateContractsInstruction.  # noqa: E501
        :type: datetime
        """

        self._timestamp = timestamp

    @property
    def create_account(self):
        """Gets the create_account of this ContractsSimulateContractsInstruction.  # noqa: E501


        :return: The create_account of this ContractsSimulateContractsInstruction.  # noqa: E501
        :rtype: AccountsAccount
        """
        return self._create_account

    @create_account.setter
    def create_account(self, create_account):
        """Sets the create_account of this ContractsSimulateContractsInstruction.


        :param create_account: The create_account of this ContractsSimulateContractsInstruction.  # noqa: E501
        :type: AccountsAccount
        """

        self._create_account = create_account

    @property
    def create_posting_instruction_batch(self):
        """Gets the create_posting_instruction_batch of this ContractsSimulateContractsInstruction.  # noqa: E501


        :return: The create_posting_instruction_batch of this ContractsSimulateContractsInstruction.  # noqa: E501
        :rtype: V1PostingInstructionBatch
        """
        return self._create_posting_instruction_batch

    @create_posting_instruction_batch.setter
    def create_posting_instruction_batch(self, create_posting_instruction_batch):
        """Sets the create_posting_instruction_batch of this ContractsSimulateContractsInstruction.


        :param create_posting_instruction_batch: The create_posting_instruction_batch of this ContractsSimulateContractsInstruction.  # noqa: E501
        :type: V1PostingInstructionBatch
        """

        self._create_posting_instruction_batch = create_posting_instruction_batch

    @property
    def create_global_parameter(self):
        """Gets the create_global_parameter of this ContractsSimulateContractsInstruction.  # noqa: E501


        :return: The create_global_parameter of this ContractsSimulateContractsInstruction.  # noqa: E501
        :rtype: ContractsCreateGlobalParameterInstruction
        """
        return self._create_global_parameter

    @create_global_parameter.setter
    def create_global_parameter(self, create_global_parameter):
        """Sets the create_global_parameter of this ContractsSimulateContractsInstruction.


        :param create_global_parameter: The create_global_parameter of this ContractsSimulateContractsInstruction.  # noqa: E501
        :type: ContractsCreateGlobalParameterInstruction
        """

        self._create_global_parameter = create_global_parameter

    @property
    def create_global_parameter_value(self):
        """Gets the create_global_parameter_value of this ContractsSimulateContractsInstruction.  # noqa: E501


        :return: The create_global_parameter_value of this ContractsSimulateContractsInstruction.  # noqa: E501
        :rtype: GlobalParametersGlobalParameterValue
        """
        return self._create_global_parameter_value

    @create_global_parameter_value.setter
    def create_global_parameter_value(self, create_global_parameter_value):
        """Sets the create_global_parameter_value of this ContractsSimulateContractsInstruction.


        :param create_global_parameter_value: The create_global_parameter_value of this ContractsSimulateContractsInstruction.  # noqa: E501
        :type: GlobalParametersGlobalParameterValue
        """

        self._create_global_parameter_value = create_global_parameter_value

    @property
    def create_flag_definition(self):
        """Gets the create_flag_definition of this ContractsSimulateContractsInstruction.  # noqa: E501


        :return: The create_flag_definition of this ContractsSimulateContractsInstruction.  # noqa: E501
        :rtype: FlagsFlagDefinition
        """
        return self._create_flag_definition

    @create_flag_definition.setter
    def create_flag_definition(self, create_flag_definition):
        """Sets the create_flag_definition of this ContractsSimulateContractsInstruction.


        :param create_flag_definition: The create_flag_definition of this ContractsSimulateContractsInstruction.  # noqa: E501
        :type: FlagsFlagDefinition
        """

        self._create_flag_definition = create_flag_definition

    @property
    def create_flag(self):
        """Gets the create_flag of this ContractsSimulateContractsInstruction.  # noqa: E501


        :return: The create_flag of this ContractsSimulateContractsInstruction.  # noqa: E501
        :rtype: FlagsFlag
        """
        return self._create_flag

    @create_flag.setter
    def create_flag(self, create_flag):
        """Sets the create_flag of this ContractsSimulateContractsInstruction.


        :param create_flag: The create_flag of this ContractsSimulateContractsInstruction.  # noqa: E501
        :type: FlagsFlag
        """

        self._create_flag = create_flag

    @property
    def create_plan(self):
        """Gets the create_plan of this ContractsSimulateContractsInstruction.  # noqa: E501


        :return: The create_plan of this ContractsSimulateContractsInstruction.  # noqa: E501
        :rtype: PlansPlan
        """
        return self._create_plan

    @create_plan.setter
    def create_plan(self, create_plan):
        """Sets the create_plan of this ContractsSimulateContractsInstruction.


        :param create_plan: The create_plan of this ContractsSimulateContractsInstruction.  # noqa: E501
        :type: PlansPlan
        """

        self._create_plan = create_plan

    @property
    def create_account_plan_assoc(self):
        """Gets the create_account_plan_assoc of this ContractsSimulateContractsInstruction.  # noqa: E501


        :return: The create_account_plan_assoc of this ContractsSimulateContractsInstruction.  # noqa: E501
        :rtype: PlansAccountPlanAssoc
        """
        return self._create_account_plan_assoc

    @create_account_plan_assoc.setter
    def create_account_plan_assoc(self, create_account_plan_assoc):
        """Sets the create_account_plan_assoc of this ContractsSimulateContractsInstruction.


        :param create_account_plan_assoc: The create_account_plan_assoc of this ContractsSimulateContractsInstruction.  # noqa: E501
        :type: PlansAccountPlanAssoc
        """

        self._create_account_plan_assoc = create_account_plan_assoc

    @property
    def create_account_update(self):
        """Gets the create_account_update of this ContractsSimulateContractsInstruction.  # noqa: E501


        :return: The create_account_update of this ContractsSimulateContractsInstruction.  # noqa: E501
        :rtype: AccountsAccountUpdate
        """
        return self._create_account_update

    @create_account_update.setter
    def create_account_update(self, create_account_update):
        """Sets the create_account_update of this ContractsSimulateContractsInstruction.


        :param create_account_update: The create_account_update of this ContractsSimulateContractsInstruction.  # noqa: E501
        :type: AccountsAccountUpdate
        """

        self._create_account_update = create_account_update

    @property
    def update_account(self):
        """Gets the update_account of this ContractsSimulateContractsInstruction.  # noqa: E501


        :return: The update_account of this ContractsSimulateContractsInstruction.  # noqa: E501
        :rtype: AccountsAccount
        """
        return self._update_account

    @update_account.setter
    def update_account(self, update_account):
        """Sets the update_account of this ContractsSimulateContractsInstruction.


        :param update_account: The update_account of this ContractsSimulateContractsInstruction.  # noqa: E501
        :type: AccountsAccount
        """

        self._update_account = update_account

    @property
    def create_calendar(self):
        """Gets the create_calendar of this ContractsSimulateContractsInstruction.  # noqa: E501


        :return: The create_calendar of this ContractsSimulateContractsInstruction.  # noqa: E501
        :rtype: CalendarCalendar
        """
        return self._create_calendar

    @create_calendar.setter
    def create_calendar(self, create_calendar):
        """Sets the create_calendar of this ContractsSimulateContractsInstruction.


        :param create_calendar: The create_calendar of this ContractsSimulateContractsInstruction.  # noqa: E501
        :type: CalendarCalendar
        """

        self._create_calendar = create_calendar

    @property
    def create_calendar_event(self):
        """Gets the create_calendar_event of this ContractsSimulateContractsInstruction.  # noqa: E501


        :return: The create_calendar_event of this ContractsSimulateContractsInstruction.  # noqa: E501
        :rtype: CalendarCalendarEvent
        """
        return self._create_calendar_event

    @create_calendar_event.setter
    def create_calendar_event(self, create_calendar_event):
        """Sets the create_calendar_event of this ContractsSimulateContractsInstruction.


        :param create_calendar_event: The create_calendar_event of this ContractsSimulateContractsInstruction.  # noqa: E501
        :type: CalendarCalendarEvent
        """

        self._create_calendar_event = create_calendar_event

    @property
    def create_smart_contract_module_versions_link(self):
        """Gets the create_smart_contract_module_versions_link of this ContractsSimulateContractsInstruction.  # noqa: E501


        :return: The create_smart_contract_module_versions_link of this ContractsSimulateContractsInstruction.  # noqa: E501
        :rtype: ContractModulesSmartContractModuleVersionsLink
        """
        return self._create_smart_contract_module_versions_link

    @create_smart_contract_module_versions_link.setter
    def create_smart_contract_module_versions_link(self, create_smart_contract_module_versions_link):
        """Sets the create_smart_contract_module_versions_link of this ContractsSimulateContractsInstruction.


        :param create_smart_contract_module_versions_link: The create_smart_contract_module_versions_link of this ContractsSimulateContractsInstruction.  # noqa: E501
        :type: ContractModulesSmartContractModuleVersionsLink
        """

        self._create_smart_contract_module_versions_link = create_smart_contract_module_versions_link

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ContractsSimulateContractsInstruction, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ContractsSimulateContractsInstruction):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
